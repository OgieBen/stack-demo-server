{"version":3,"sources":["../../../prod/app.js"],"names":["indexRouter","require","app","set","path","join","__dirname","use","express","json","urlencoded","extended","static","req","res","next","err","locals","message","error","get","status","render"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;AACA;AACA;AACA,IAAMA,cAAcC,QAAQ,wBAAR,CAApB;;AAEA,IAAIC,MAAM,wBAAV;;AAEA;AACAA,IAAIC,GAAJ,CAAQ,OAAR,EAAiBC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,OAArB,CAAjB;AACAJ,IAAIC,GAAJ,CAAQ,aAAR,EAAuB,MAAvB;;AAEAD,IAAIK,GAAJ,CAAQ,sBAAO,KAAP,CAAR;AACAL,IAAIK,GAAJ,CAAQC,kBAAQC,IAAR,EAAR;AACAP,IAAIK,GAAJ,CAAQC,kBAAQE,UAAR,CAAmB,EAAEC,UAAU,KAAZ,EAAnB,CAAR;AACAT,IAAIK,GAAJ,CAAQ,6BAAR;AACAL,IAAIK,GAAJ,CAAQC,kBAAQI,MAAR,CAAeR,eAAKC,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR;;AAEAJ,IAAIK,GAAJ,CAAQ,GAAR,EAAaP,WAAb;AACA;;AAEA;AACAE,IAAIK,GAAJ,CAAQ,UAASM,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AACjCA,OAAK,0BAAY,GAAZ,CAAL;AACC,CAFD;;AAIA;AACAb,IAAIK,GAAJ,CAAQ,UAASS,GAAT,EAAcH,GAAd,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8B;AACtC;AACAD,MAAIG,MAAJ,CAAWC,OAAX,GAAqBF,IAAIE,OAAzB;AACAJ,MAAIG,MAAJ,CAAWE,KAAX,GAAmBN,IAAIX,GAAJ,CAAQkB,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuCJ,GAAvC,GAA6C,EAAhE;;AAEA;AACAF,MAAIO,MAAJ,CAAWL,IAAIK,MAAJ,IAAc,GAAzB;AACAP,MAAIQ,MAAJ,CAAW,OAAX;AACC,CARD;;kBAUepB,G","file":"app.js","sourcesContent":["import express from 'express';\nimport createError from 'http-errors'\nimport path from 'path';\nimport cookieParser from 'cookie-parser'\nimport logger from 'morgan'\n\n// import indexRouter from \"../ogieben/Documents/Web Projects/Andela/slackdemo/app/routes/index\"\n// import usersRouter from '../../../slackdemo/app/routes/users'\n// import { indexRouter } from '/Users/ogieben/Documents/Web Projects/Andela/slackdemo/app/routes/index';\nconst indexRouter = require('../../app/routes/index');\n\nlet app = express();\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'jade');\n\napp.use(logger('dev'));\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\n\napp.use('/', indexRouter);\n// app.use('/users', usersRouter);\n\n// catch 404 and forward to error handler\napp.use(function(req, res, next) {\nnext(createError(404));\n});\n\n// error handler\napp.use(function(err, req, res, next) {\n// set locals, only providing error in development\nres.locals.message = err.message;\nres.locals.error = req.app.get('env') === 'development' ? err : {};\n\n// render the error page\nres.status(err.status || 500);\nres.render('error');\n});\n\nexport default app;"]}