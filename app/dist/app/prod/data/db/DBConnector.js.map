{"version":3,"sources":["../../../../../prod/data/db/DBConnector.js"],"names":["DBConnector","configString","config","err","callback","pg","connect","client","done","_connect"],"mappings":";;;;;;;;;AAAA;;;;AACA;;;;;;;;IAGaA,W,WAAAA,W;AAET,2BAAa;AAAA;;AACT;AACA,aAAKC,YAAL,GAAoBC,iBAAO,YAAP,CAApB;AAEH;;AAED;;;;;iCACSC,G,EAAKC,Q,EAAS;AACnBC,yBAAGC,OAAH,CAAW,KAAKL,YAAhB,EAA8B,UAACE,GAAD,EAAMI,MAAN,EAAcC,IAAd,EAAuB;;AAEjD,oBAAGL,GAAH,EAAO;AACCA;AACA;AACH;AACLC,yBAASG,MAAT;AACAC;AACA;AAEH,aAVD;AAWH;;;iCAEO,CAEP;;;4BAEGL,G,EAAKC,Q,EAAS;AACf,mBAAO,KAAKK,QAAL,CAAcN,GAAd,EAAmBC,QAAnB,CAAP;AACF;;;iCAGO;;AAEJ;AACA;AACH","file":"DBConnector.js","sourcesContent":["import pg from 'pg';\nimport config from 'dotenv'\n\n\nexport class DBConnector {\n    \n    constructor(){\n        // this.connect = pg.connect();\n        this.configString = config['PG_CONNECT'];\n        \n    }\n\n    // callback takes client object\n    _connect(err, callback){\n        pg.connect(this.configString, (err, client, done) => {\n                \n            if(err){\n                    err();\n                    return;\n                }\n            callback(client);\n            done()\n            return\n\n        });\n    }\n\n    _query(){\n\n    }\n\n    run(err, callback){\n       return this._connect(err, callback);\n    }\n\n\n    tester(){\n      \n        return `Testing DBConncter! ` ; \n        // ${config['PG_CONNET']}\n    }\n\n\n}"]}