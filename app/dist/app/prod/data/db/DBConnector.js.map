{"version":3,"sources":["../../../../../prod/data/db/DBConnector.js"],"names":["DBConnector","_pool","Pool","user","host","database","password","port","errCallback","query","callback","getPool","toString","err","res","pool","end","User"],"mappings":";;;;;;;;;AAAA;;;;AACA;;AACA;;;;;;;;IAIaA,W;AAET,2BAAa;AAAA;;AACT;AACA,aAAKC,KAAL,GAAa,IAAIC,QAAJ,CAAS;AAClBC,kBAAM,EADY;AAElBC,kBAAM,EAFY;AAGlBC,sBAAU,EAHQ;AAIlBC,sBAAU,EAJQ;AAKlBC,kBAAM;AALY,SAAT,CAAb;AAQH;;AAED;AACA;;;;;;;;;;;;;AAcA;;;;;;;;;;;8BAOMC,W,EAAaC,M,EAAOC,Q,EAAS;;AAE/B,iBACKC,OADL,GAESF,KAFT,CAEeA,OAAMG,QAAN,EAFf,EAEiC,UAACC,GAAD,EAAMC,GAAN,EAAc;AACnC;AACA,oBAAGD,GAAH,EAAO;AACHL;AACA,2BAAO,KAAP;AACH;;AAEDE;AACAK,qBAAKC,GAAL;AACH,aAXT;AAYH;;AAGD;;;;;;;;;;gCAOQb,I,EAAK;AACT,gBAAI,CAACA,IAAD,YAAiBc,UAArB,EAA0B;AACtB,uBAAO,KAAP;AACH;AACD,mBAAO,KAAP;AACH;;;kCAEQ;AACL,mBAAO,KAAKhB,KAAZ;AACH;;;iCAGO;AACJ;AACA;AACH","file":"DBConnector.js","sourcesContent":["import pg, {Pool, Client} from 'pg';\nimport { User } from '../model/User';\nimport config from 'dotenv'\n\n\n\nexport class DBConnector {\n    \n    constructor(){\n        // this.configString = config['PG_CONNECT'];\n        this._pool = new Pool({\n            user: '',\n            host: '',\n            database: '',\n            password: '',\n            port: 3211,\n        });\n        \n    }\n\n    // callback takes client object\n    /* _connect(err, callback){\n        pg.connect(this.configString, (err, client, done) => {\n                \n            if(err){\n                    err();\n                    return;\n                }\n            callback(client);\n            done()\n            return\n\n        });\n    } */\n\n    /**\n     * Executes Queries\n     * \n     * @param {Callback} errCallback \n     * @param {String} query \n     * @param {Callback} callback \n     */\n    query(errCallback, query, callback){\n        \n        this\n            .getPool()\n                .query(query.toString(), (err, res) => { \n                    // console.log(err, res)\n                    if(err){\n                        errCallback();\n                        return false;\n                    }\n\n                    callback()\n                    pool.end()\n                });\n    }\n\n\n    /**\n     * Adds a user to database\n     * \n     * @param {User} user \n     * \n     * @returns {Boolean}\n     */\n    addUser(user){\n        if( !user instanceof User){\n            return false;\n        }\n        return false;\n    }\n\n    getPool(){\n        return this._pool;\n    }\n\n\n    tester(){\n        return `Testing DBConncter! ` ; \n        // ${config['PG_CONNET']}\n    }\n\n\n}"]}