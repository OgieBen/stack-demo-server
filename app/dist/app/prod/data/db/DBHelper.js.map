{"version":3,"sources":["../../../../../prod/data/db/DBHelper.js"],"names":["DBConnector","_pool","Pool","user","host","database","password","port","errCallback","query","callback","getPool","toString","err","res","pool","end","User"],"mappings":";;;;;;;;;AAAA;;;;AACA;;AACA;;;;;;;;IAIaA,W;AAET,2BAAc;AAAA;;AACV;AACA,aAAKC,KAAL,GAAa,IAAIC,QAAJ,CAAS;AAClBC,kBAAM,EADY;AAElBC,kBAAM,EAFY;AAGlBC,sBAAU,EAHQ;AAIlBC,sBAAU,EAJQ;AAKlBC,kBAAM;AALY,SAAT,CAAb;AAQH;;AAED;AACA;;;;;;;;;;;;;AAcA;;;;;;;;;;;8BAOMC,W,EAAaC,M,EAAOC,Q,EAAU;;AAEhC,iBACKC,OADL,GAEKF,KAFL,CAEWA,OAAMG,QAAN,EAFX,EAE6B,UAACC,GAAD,EAAMC,GAAN,EAAc;AACnC;AACA,oBAAID,GAAJ,EAAS;AACLL;AACA,2BAAO,KAAP;AACH;;AAEDE;AACAK,qBAAKC,GAAL;AACH,aAXL;AAYH;;AAGD;;;;;;;;;;gCAOQb,I,EAAM;AACV,gBAAI,CAACA,IAAD,YAAiBc,UAArB,EAA2B;AACvB,uBAAO,KAAP;AACH;AACD,mBAAO,KAAP;AACH;;;kCAGS;AACN,mBAAO,KAAKhB,KAAZ;AACH;;;4CAGmB,CAEnB;;;wCAEe,CAEf;;;uCAEc,CAEd;;;0DAEiC,CAEjC;;;6CAEoB,CAEpB;;;6CAEoB,CAEpB;;;+CAEsB,CAEtB;;;uCAEc,CAEd;;;yCAEgB,CAEhB;;;2CAEkB,CAElB;;;yCAEgB,CAEhB;;;iCAKQ;AACL;AACA;AACH","file":"DBHelper.js","sourcesContent":["import pg, { Pool, Client } from 'pg';\nimport { User } from '../model/User';\nimport config from 'dotenv'\n\n\n\nexport class DBConnector {\n\n    constructor() {\n        // this.configString = config['PG_CONNECT'];\n        this._pool = new Pool({\n            user: '',\n            host: '',\n            database: '',\n            password: '',\n            port: 3211,\n        });\n\n    }\n\n    // callback takes client object\n    /* _connect(err, callback){\n        pg.connect(this.configString, (err, client, done) => {\n                \n            if(err){\n                    err();\n                    return;\n                }\n            callback(client);\n            done()\n            return\n\n        });\n    } */\n\n    /**\n     * Executes Queries\n     * \n     * @param {Callback} errCallback \n     * @param {String} query \n     * @param {Callback} callback \n     */\n    query(errCallback, query, callback) {\n\n        this\n            .getPool()\n            .query(query.toString(), (err, res) => {\n                // console.log(err, res)\n                if (err) {\n                    errCallback();\n                    return false;\n                }\n\n                callback()\n                pool.end()\n            });\n    }\n\n\n    /**\n     * Adds a user to database\n     * \n     * @param {User} user \n     * \n     * @returns {Boolean}\n     */\n    addUser(user) {\n        if (!user instanceof User) {\n            return false;\n        }\n        return false;\n    }\n\n\n    getPool() {\n        return this._pool;\n    }\n\n\n    fetchAllQuestions() {\n\n    }\n\n    fetchQuestion() {\n\n    }\n\n    fetchAnswers() {\n\n    }\n\n    fetchQuestionWithHighestAnswers() {\n\n    }\n\n    fetchUserQuestions() {\n\n    }\n\n    addCommentToAnwser() {\n\n    }\n\n    addCommentToQuestion() {\n\n    }\n\n    upvoteAnswer() {\n\n    }\n\n    downVoteAnswer() {\n\n    }\n\n    searchForAnswers() {\n\n    }\n\n    deleteQuestion() {\n\n    }\n\n\n\n\n    tester() {\n        return `Testing DBConncter! `;\n        // ${config['PG_CONNET']}\n    }\n\n\n}"]}