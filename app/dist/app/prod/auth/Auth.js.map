{"version":3,"sources":["../../../../prod/auth/Auth.js"],"names":["Auth","email","passWord","password","authenticate","validate","addUser","_answer","Answer","getId"],"mappings":";;;;;;;;;AACA;;;;IAGaA,I,WAAAA,I;AAET,oBAAa;AAAA;AAEZ;;AAED;;;;;;;;;;;;;qCASaC,K,EAAOC,Q,EAAS;AACzB,mBAAO,KAAP;AACH;;AAED;;;;;;;;;8BAMMD,K,EAAOE,Q,EAAS;;AAElB,gBAAG,KAAKC,YAAL,CAAkBH,KAAlB,EAAyBE,QAAzB,CAAH,EAAsC;AAClC;AACA,uBAAO,IAAP;AACH;AACD,mBAAO,KAAP;AACH;;AAED;;;;;;;;;;;+BAQOF,K,EAAOE,Q,EAAS;;AAEnB,gBAAG,KAAKE,QAAL,CAAcJ,KAAd,EAAqBE,QAArB,CAAH,EAAkC;AAC9B,uBAAO,KAAKG,OAAL,CAAaL,KAAb,EAAoBE,QAApB,CAAP;AACH;AACD,mBAAO,KAAP;AACH;;AAED;;;;;;;;;;;gCAQQF,K,EAAOE,Q,EAAS;AACpB,mBAAO,KAAP;AACH;;AAED;;;;;;;;;;;iCAQSF,K,EAAOE,Q,EAAS;;AAErB,mBAAO,KAAP;AACH;;;oCAEW;AACR,gBAAII,UAAU,IAAIC,cAAJ,CAAW,CAAX,EAAc,CAAd,EAAiB,EAAjB,EAAqB,EAArB,CAAd,CADQ,CACmC;AAC3C,mBAAQD,QAAQE,KAAR,EAAR;AACH","file":"Auth.js","sourcesContent":["\nimport { Answer } from '../data/model/Answer';\n\n\nexport class Auth {\n\n    constructor(){\n        \n    }\n\n    /**\n     * Authenticates users i.e. check if users are registered,\n     * then logs them in\n     * \n     * @param {String} email \n     * @param {String} passWord \n     * \n     * @returns {Boolean}\n     */\n    authenticate(email, passWord){\n        return false;\n    }\n\n    /**\n     * Logs user into the platform\n     * \n     * @param {String} email \n     * @param {String} password \n     */\n    login(email, password){\n\n        if(this.authenticate(email, password)){\n            // create user session here:\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Signs user up\n     * \n     * @param {String} email \n     * @param {String} password \n     * \n     * @returns {Boolean}\n     */\n    signUp(email, password){\n\n        if(this.validate(email, password)){\n            return this.addUser(email, password);\n        }\n        return false;\n    }\n\n    /**\n     * Adds user to database\n     * \n     * @param {String} email \n     * @param {String} password \n     * \n     * @returns {Boolean}\n     */\n    addUser(email, password){\n        return false;\n    }\n\n    /**\n     * Validates parameters \n     * \n     * @param {String} email \n     * @param {String} password \n     * \n     * @returns {Boolean}\n     */\n    validate(email, password){\n\n        return false;\n    }\n\n    testModel() {\n        let _answer = new Answer(1, 2, \"\", \"\" );   //new Answer(1, 2, \"\", \"\" );\n        return  _answer.getId();\n    }\n}\n\n\n\n\n    "]}