{"version":3,"sources":["../../../../prod/api/Auth.js"],"names":["router","factory","Factory","auth","getAuth","post","req","res","email","body","toString","name","login","flag","json","msg","password","console","log","signUp","get","result","getDbc","setUpDb","module","exports"],"mappings":";;AAAA;;AACA;;AAGA;AACA,IAAIA,SAAS,sBAAb;;AAGA,IAAIC,UAAU,IAAIC,gBAAJ,EAAd;AACA,IAAIC,OAAOF,QAAQG,OAAR,EAAX;;AAIA;;;;;;;;;;AAUAJ,OAAOK,IAAP,CAAY,QAAZ,EAAsB,UAACC,GAAD,EAAMC,GAAN,EAAc;;AAEhC,QAAIC,QAAQF,IAAIG,IAAJ,CAASD,KAAT,CAAeE,QAAf,EAAZ;AACA,QAAIC,OAAOL,IAAIG,IAAJ,CAASE,IAAT,CAAcD,QAAd,EAAX;;AAEAP,SAAKS,KAAL,CAAWJ,KAAX,EAAkBG,IAAlB,EAAwB,UAACE,IAAD,EAAU;AAC9B,YAAIA,IAAJ,EAAU;AACNN,gBAAIO,IAAJ,CAAS;AACLC,qBAAK;AADA,aAAT;AAGA;AACH;AACD,YAAIF,SAAS,WAAT,IAAwBA,QAAQ,KAApC,EAA2C;AACvCN,gBAAIO,IAAJ,CAAS;AACLC,qBAAK;AADA,aAAT;AAGH;AAEJ,KAbD;AAeH,CApBD;;AAsBA;;;;;;;;;;AAUAf,OAAOK,IAAP,CAAY,SAAZ,EAAuB,UAACC,GAAD,EAAMC,GAAN,EAAc;;AAEjC;;AAEA,QAAII,OAAOL,IAAIG,IAAJ,CAASE,IAAT,CAAcD,QAAd,EAAX;AACA,QAAIF,QAAQF,IAAIG,IAAJ,CAASD,KAAT,CAAeE,QAAf,EAAZ;AACA,QAAIM,WAAWV,IAAIG,IAAJ,CAASO,QAAT,CAAkBN,QAAlB,EAAf;;AAEAO,YAAQC,GAAR,mBAA2BP,MAAMH,KAAN,EAAaQ,QAAxC;;AAEAb,SACKgB,MADL,CACYR,IADZ,EACkBH,KADlB,EACyBQ,QADzB,EACmC,UAACH,IAAD,EAAU;AACrC,YAAIA,IAAJ,EAAU;AACNN,gBAAIO,IAAJ,CAAS;AACLC,qBAAK;AADA,aAAT;AAGA;AACH;;AAEDR,YAAIO,IAAJ,CAAS;AACLC,iBAAK;AADA,SAAT;AAGH,KAZL;AAcH,CAxBD;;AA0BAf,OAAOoB,GAAP,CAAW,eAAX,EAA4B,UAACd,GAAD,EAAMC,GAAN,EAAc;;AAEtC;;AAEA;;AAEA;AACA,QAAIc,SAASpB,QACRqB,MADQ,GAERC,OAFQ,EAAb;;AAIA,QAAIF,MAAJ,EAAY;AACRd,YAAIO,IAAJ,CAAS;AACLC,iBAAK;AADA,SAAT;AAGH;;AAEDR,QAAIO,IAAJ,CAAS;AACLC,aAAK;AADA,KAAT;;AAKA;AACH,CAvBD;;AA4BAS,OAAOC,OAAP,GAAiBzB,MAAjB","file":"Auth.js","sourcesContent":["import { Router } from 'express';\nimport { Factory } from '../Factory';\n\n\n// config();\nlet router = Router();\n\n\nlet factory = new Factory();\nlet auth = factory.getAuth();\n\n\n\n/**\n *  This endpoint authenticates a user using th user's password and email \n *  (Note: change method from get to post)\n *  PAYLOAD:\n * @method POST\n * @param String email\n * @param String password\n * \n * @returns JSON\n */\nrouter.post('/login', (req, res) => {\n\n    let email = req.body.email.toString();\n    let name = req.body.name.toString();\n\n    auth.login(email, name, (flag) => {\n        if (flag) {\n            res.json({\n                msg: true,\n            });\n            return;\n        }\n        if (flag === 'undefined' || flag == false) {\n            res.json({\n                msg: false,\n            });\n        }\n\n    });\n\n});\n\n/**\n * This endpoint create a user account\n * \n * @method POST\n * \n * @param String email\n * @param String password\n * \n * @return JSON \n */\nrouter.post('/signup', (req, res) => {\n\n    // TODO validate and clean user date\n\n    let name = req.body.name.toString();\n    let email = req.body.email.toString();\n    let password = req.body.password.toString();\n\n    console.log(`parameters: ${name, email, password}`);\n\n    auth\n        .signUp(name, email, password, (flag) => {\n            if (flag) {\n                res.json({\n                    msg: true,\n                });\n                return;\n            }\n\n            res.json({\n                msg: false,\n            });\n        });\n\n});\n\nrouter.get('/dbsetup/:key', (req, res) => {\n\n    // let key = req.params.key.toString();\n\n    // if (key ===  \"123\"){\n\n    // set up db\n    let result = factory\n        .getDbc()\n        .setUpDb();\n\n    if (result) {\n        res.json({\n            msg: true,\n        });\n    }\n\n    res.json({\n        msg: false,\n    });\n\n\n    // }\n});\n\n\n\n\nmodule.exports = router;\n"]}