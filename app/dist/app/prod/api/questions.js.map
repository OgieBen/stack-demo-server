{"version":3,"sources":["../../../../prod/api/questions.js"],"names":["router","get","req","res","next","post","delete","module","exports"],"mappings":";;AAAA;;AACA;;AAEA,IAAIA,SAAS,sBAAb;;AAGA;AACA;;;AAGA;;;;;AAKAA,OAAOC,GAAP,CAAW,GAAX,EAAgB,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB,CAEnC,CAFD;;AAIA;;;;;;;;;;AAUAJ,OAAOC,GAAP,CAAW,OAAX,EAAoB,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB,CAEvC,CAFD;;AAIA;;;AAGAJ,OAAOK,IAAP,CAAY,GAAZ,EAAiB,UAACH,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB,CAEpC,CAFD;;AAIA;;;AAGAJ,OAAOM,MAAP,CAAc,OAAd,EAAuB,UAACJ,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB,CAE1C,CAFD;;AAMAG,OAAOC,OAAP,GAAiBR,MAAjB","file":"questions.js","sourcesContent":["import  { Router } from 'express';\n// import { Factory } from '../Factory';\n\nlet router = Router();\n\n\n// let factory = new Factory();\n// let auth = factory.getAuth();\n\n\n/**\n * Fetches all questions that have been asked on the platform\n * \n * @returns {JSON} List\n */\nrouter.get('/', (req, res, next) => {\n\n});\n\n/**\n * Fetch a specific question\n * This should come with all the answers\n * provided so far for the question.\n * \n * @method POST\n * @param {Integer} id\n * \n * @returns {JSON} Question\n */\nrouter.get('/{id}', (req, res, next) => {\n\n});\n\n/**\n * Adds a question the platform\n */\nrouter.post('/', (req, res, next) => {\n\n});\n\n/**\n * Removes a question from the platform\n */\nrouter.delete('/{id}', (req, res, next) => {\n\n});\n\n\n\nmodule.exports = router;"]}